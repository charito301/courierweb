namespace MMarinov.WebCrawler.Indexer
{
    /// <summary>
    /// Summary description for CrawlingManager
    /// </summary>
    public class CrawlingManager
    {
        public static MMarinov.WebCrawler.Indexer.Catalog GlobalCatalog = new MMarinov.WebCrawler.Indexer.Catalog();

        private MMarinov.WebCrawler.Indexer.Spider spider;
        private System.Threading.Timer timer;
        private static string errorMessage = "";
        private static string logMessage = "";
        private static string errorWebMessage = "";

        /// <summary>
        /// Declaring the Event Handler delegate
        /// </summary>
        public delegate void CrawlerEventHandler(Report.EventTypes eventType, string message);
        public static event CrawlerEventHandler CrawlerEvent;

        public CrawlingManager()
        {
           
        }

        private static void WriteLog(object o)
        {
            if (errorMessage != "")
            {
                Report.Logger.ErrorLog(errorMessage);
                errorMessage = "";
            }

            if (errorWebMessage != "")
            {
                Report.Logger.ErrorWebLog(errorWebMessage);
                errorWebMessage = "";
            }

            if (logMessage != "")
            {
                Report.Logger.MessageLog(logMessage);
                logMessage = "";
            }
        }

        /// <summary>
        /// Number of spider threads to start
        /// </summary>
        /// <param name="p"></param>
        public void StartSpider()
        {
            SeedList.GetTheList();

            ResetFolders();

            timer = new System.Threading.Timer(new System.Threading.TimerCallback((WriteLog)), null, 200, 3000);

            spider = new MMarinov.WebCrawler.Indexer.Spider();
            spider.SpiderProgressEvent += new MMarinov.WebCrawler.Report.SpiderProgressEventHandler(OnProgressEvent);
        }

        private void ResetFolders()
        {
            try
            {
                System.IO.Directory.Delete(Preferences.TempPath, true);
            }
            catch { }

            try
            {
                System.IO.File.Delete(Preferences.WorkingPath + "\\WebCrawlerErrorLog.txt");
            }
            catch { }

            try
            {
                System.IO.File.Delete(Preferences.WorkingPath + "\\WebCrawlerErrorWebLog.txt");
            }
            catch { }

            try
            {
                System.IO.File.Delete(Preferences.WorkingPath + "\\WebCrawlerMessageLog.txt");
            }
            catch { }
        }

        private void SendMail()
        {
            try
            {
                System.Net.Mail.MailMessage mail = new System.Net.Mail.MailMessage();
                mail.To.Add("mariyan87@gmail.com");
                mail.From = new System.Net.Mail.MailAddress("WebCrawler@Service.com", "WebCrawler Service");
                mail.Subject = "Crawling Report";
                mail.Body = "Crawling Running :" + System.DateTime.Now.ToString();
                System.Net.Mail.SmtpClient sc = new System.Net.Mail.SmtpClient("192.168.0.1");
                sc.Credentials = new System.Net.NetworkCredential("MMarinov", "matrix");
                sc.Send(mail);
            }
            catch (System.Exception ex)
            {
                Report.Logger.ErrorLog(new System.Exception("Email Notifier", ex));
            }
        }

        /// <summary>
        /// Events generated by the Spider 
        /// </summary>
        private static void OnProgressEvent(MMarinov.WebCrawler.Report.ProgressEventArgs pea)
        {
            if (CrawlerEvent != null)
            {
                CrawlerEvent(pea.EventType, pea.Message);

                if (pea.EventType == Report.EventTypes.Error)
                {
                    if (pea.IsWebException)
                    {
                        errorWebMessage += pea.Message;
                    }
                    else
                    {
                        errorMessage += pea.Message;
                    }
                }
                else
                {
                    logMessage += Report.Logger.FormatMessage(pea.Message);
                }
            }
        }

        public void StopSpider()
        {
            spider.KillThreads();

            SendMail();

            timer.Dispose();
        }
    }
}